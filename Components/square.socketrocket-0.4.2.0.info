{"Name":"SocketRocket Web Sockets","Id":2471,"Alias":"square.socketrocket","Description":"# SocketRocket Web Sockets Details\n\n\u003e A conforming WebSocket (RFC 6455) client library.\n\n## Connecting\n\nWe can connect to a web socket using the `WebSocket` type:\n\n    // Create request for remote resource\n\tNSUrl url = new NSUrl(\"ws://echo.websocket.org/\");\n    WebSocket webSocket = new WebSocket(url);\n\n## Listening\n\nWe can use an event-based listener:\n\n    webSocket.WebSocketOpened += (sender, e) =\u003e {\n\t\t// the socket was opened, so we can start using it\n\t};\n\twebSocket.Open();\n\t\nOr, we can implement a delegate:\n\n    // attach the delegate and open the connection\n    webSocket.Delegate = new SocketDelegate();\n\twebSocket.Open();\n\t\n\t// the delegate type\n\tclass SocketDelegate : WebSocketDelegate\n\t{\n\t\tpublic override void WebSocketOpened(WebSocket webSocket)\n\t\t{\n\t\t\t// the socket was opened\n\t\t}\n\t\tpublic override void WebSocketClosed(WebSocket webSocket, StatusCode code, string reason, bool wasClean)\n\t\t{\n\t\t\t// the connection was closed\n\t\t}\n\t\tpublic override void WebSocketFailed(WebSocket webSocket, NSError error)\n\t\t{\n\t\t\t// there was an error\n\t\t}\n\t\tpublic override void ReceivedMessage(WebSocket webSocket, NSObject message)\n\t\t{\n\t\t\t// we received a message\n\t\t}\n\t\tpublic override void ReceivedPong(WebSocket webSocket, NSData pongPayload)\n\t\t{\n\t\t\t// respond to a ping\n\t\t}\n\t}\n\t\n## Communicating\n\nUsing either the event-based listener or a custom implementation, we can access the open socket and start sending messages:\n\n\twebSocket.WebSocketOpened += (sender, e) =\u003e {\n\t    webSocket.Send ((NSString)\"Hello World!\");\n\t};\n\nWhen a message comes in from a remote source, we can handle it using either the event-based listener or a custom implementation:\n\n\twebSocket.ReceivedMessage += (sender, e) =\u003e {\n\t    // read the contents\n\t    string payload = e.Message.ToString();\n\t};\n","Version":"0.4.2.0","Summary":"A conforming WebSocket (RFC 6455) client library.","QuickStart":"# Getting Started with SocketRocket Web Sockets\n\n\u003e A conforming WebSocket (RFC 6455) client library.\n\n## Connecting\n\nWe can connect to a web socket using the `WebSocket` type:\n\n    // Create request for remote resource\n\tNSUrl url = new NSUrl(\"ws://echo.websocket.org/\");\n    WebSocket webSocket = new WebSocket(url);\n\n## Listening\n\nWe can use an event-based listener:\n\n    webSocket.WebSocketOpened += (sender, e) =\u003e {\n\t\t// the socket was opened, so we can start using it\n\t};\n\twebSocket.Open();\n\t\nOr, we can implement a delegate:\n\n    // attach the delegate and open the connection\n    webSocket.Delegate = new SocketDelegate();\n\twebSocket.Open();\n\t\n\t// the delegate type\n\tclass SocketDelegate : WebSocketDelegate\n\t{\n\t\tpublic override void WebSocketOpened(WebSocket webSocket)\n\t\t{\n\t\t\t// the socket was opened\n\t\t}\n\t\tpublic override void WebSocketClosed(WebSocket webSocket, StatusCode code, string reason, bool wasClean)\n\t\t{\n\t\t\t// the connection was closed\n\t\t}\n\t\tpublic override void WebSocketFailed(WebSocket webSocket, NSError error)\n\t\t{\n\t\t\t// there was an error\n\t\t}\n\t\tpublic override void ReceivedMessage(WebSocket webSocket, NSObject message)\n\t\t{\n\t\t\t// we received a message\n\t\t}\n\t\tpublic override void ReceivedPong(WebSocket webSocket, NSData pongPayload)\n\t\t{\n\t\t\t// respond to a ping\n\t\t}\n\t}\n\t\n## Communicating\n\nUsing either the event-based listener or a custom implementation, we can access the open socket and start sending messages:\n\n\twebSocket.WebSocketOpened += (sender, e) =\u003e {\n\t    webSocket.Send ((NSString)\"Hello World!\");\n\t};\n\nWhen a message comes in from a remote source, we can handle it using either the event-based listener or a custom implementation:\n\n\twebSocket.ReceivedMessage += (sender, e) =\u003e {\n\t    // read the contents\n\t    string payload = e.Message.ToString();\n\t};\n","Hash":"7ff5d822038523e505779cba16cf8dde","TargetPlatforms":["ios","ios-unified"],"TrialHash":null}